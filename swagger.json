{
  "openapi": "3.0.0",
  "info": {
    "title": "Compass Car API",
    "version": "1.0.0",
    "description": "API para um sistema de locação de carros."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/login": {
      "post": {
        "summary": "Realiza o login de um usuário e retorna um token JWT.",
        "tags": [
          "Login (Autenticação)"
        ],
        "description": "Esta rota permite que um usuário autenticado no sistema obtenha um token de acesso JWT. O token deve ser utilizado para autenticação em rotas protegidas. Após o login bem-sucedido, o token é retornado junto com o tempo de expiração.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "O email do usuário.",
                    "example": "usuario@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "A senha do usuário.",
                    "example": "senhaSegura"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Token de acesso JWT que deve ser usado nas próximas requisições protegidas. O token deve ser enviado no cabeçalho da requisição como: 'Authorization: Bearer {token}'.\n",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "expiresIn": {
                      "type": "integer",
                      "description": "Tempo, em segundos, até o token expirar. Após esse período, o usuário precisará fazer login novamente.\n",
                      "example": 600
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida (formato incorreto ou dados ausentes).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Dados inválidos. Verifique o formato do e-mail e senha."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "E-mail ou senha inválidos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "E-mail ou senha incorretos."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/api/v1/carros": {
      "post": {
        "summary": "Criação de um novo carro",
        "tags": [
          "Carros"
        ],
        "description": "Endpoint protegido para cadastrar um novo carro no sistema. É necessário um token JWT para acessar essa rota.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "placa": {
                    "type": "string",
                    "description": "Placa do carro",
                    "example": "ABC-1234"
                  },
                  "marca": {
                    "type": "string",
                    "description": "Marca do carro",
                    "example": "Ford"
                  },
                  "modelo": {
                    "type": "string",
                    "description": "Modelo do carro",
                    "example": "Fiesta"
                  },
                  "ano": {
                    "type": "integer",
                    "description": "Ano de fabricação do carro",
                    "example": 2020
                  },
                  "km": {
                    "type": "integer",
                    "description": "Quilometragem do carro",
                    "example": 15000,
                    "default": 0
                  },
                  "items": {
                    "type": "object",
                    "description": "Itens adicionais do carro, como ar-condicionado ou direção hidráulica.",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "example": {
                      "ar-condicionado": "sim",
                      "direção hidráulica": "sim"
                    }
                  },
                  "valorDiaria": {
                    "type": "number",
                    "format": "float",
                    "description": "Valor da diária para aluguel do carro",
                    "example": 150
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Carro criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID do carro criado",
                      "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                    },
                    "placa": {
                      "type": "string",
                      "description": "Placa do carro",
                      "example": "ABC-1234"
                    },
                    "marca": {
                      "type": "string",
                      "description": "Marca do carro",
                      "example": "Ford"
                    },
                    "modelo": {
                      "type": "string",
                      "description": "Modelo do carro",
                      "example": "Fiesta"
                    },
                    "ano": {
                      "type": "integer",
                      "description": "Ano de fabricação do carro",
                      "example": 2020
                    },
                    "km": {
                      "type": "integer",
                      "description": "Quilometragem do carro",
                      "example": 15000
                    },
                    "items": {
                      "type": "object",
                      "description": "Itens adicionais do carro",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "example": {
                        "ar-condicionado": "sim",
                        "direção hidráulica": "sim"
                      }
                    },
                    "valorDiaria": {
                      "type": "number",
                      "format": "float",
                      "description": "Valor da diária para aluguel do carro",
                      "example": 150
                    },
                    "dataCadastro": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de cadastro do carro",
                      "example": "2023-07-15T08:30:00Z"
                    },
                    "dataDeExclusao": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "Data de exclusão do carro, se aplicável",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida (dados incorretos ou ausentes)"
          },
          "401": {
            "description": "Não autorizado (falha na autenticação)"
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      },
      "get": {
        "summary": "Lista todos os carros",
        "tags": [
          "Carros"
        ],
        "description": "Endpoint protegido para listar todos os carros cadastrados no sistema. É necessário um token JWT para acessar essa rota.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de carros retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID do carro",
                        "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                      },
                      "placa": {
                        "type": "string",
                        "description": "Placa do carro",
                        "example": "ABC-1234"
                      },
                      "marca": {
                        "type": "string",
                        "description": "Marca do carro",
                        "example": "Ford"
                      },
                      "modelo": {
                        "type": "string",
                        "description": "Modelo do carro",
                        "example": "Fiesta"
                      },
                      "ano": {
                        "type": "integer",
                        "description": "Ano de fabricação do carro",
                        "example": 2020
                      },
                      "km": {
                        "type": "integer",
                        "description": "Quilometragem do carro",
                        "example": 15000
                      },
                      "items": {
                        "type": "object",
                        "description": "Itens adicionais do carro",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "example": {
                          "ar-condicionado": "sim",
                          "direção hidráulica": "sim"
                        }
                      },
                      "valorDiaria": {
                        "type": "number",
                        "format": "float",
                        "description": "Valor da diária para aluguel do carro",
                        "example": 150
                      },
                      "dataCadastro": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Data de cadastro do carro",
                        "example": "2023-07-15T08:30:00Z"
                      },
                      "dataDeExclusao": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Data de exclusão do carro, se aplicável",
                        "example": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado (falha na autenticação)"
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      }
    },
    "/api/v1/carros/{id}": {
      "get": {
        "summary": "Obtém detalhes de um carro por ID",
        "tags": [
          "Carros"
        ],
        "description": "Endpoint protegido para buscar os detalhes de um carro específico pelo seu ID. É necessário um token JWT para acessar essa rota.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID único do carro",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do carro retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID do carro",
                      "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                    },
                    "placa": {
                      "type": "string",
                      "description": "Placa do carro",
                      "example": "ABC-1234"
                    },
                    "marca": {
                      "type": "string",
                      "description": "Marca do carro",
                      "example": "Ford"
                    },
                    "modelo": {
                      "type": "string",
                      "description": "Modelo do carro",
                      "example": "Fiesta"
                    },
                    "ano": {
                      "type": "integer",
                      "description": "Ano de fabricação do carro",
                      "example": 2020
                    },
                    "km": {
                      "type": "integer",
                      "description": "Quilometragem do carro",
                      "example": 15000
                    },
                    "items": {
                      "type": "object",
                      "description": "Itens adicionais do carro",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "example": {
                        "ar-condicionado": "sim",
                        "direção hidráulica": "sim"
                      }
                    },
                    "valorDiaria": {
                      "type": "number",
                      "format": "float",
                      "description": "Valor da diária para aluguel do carro",
                      "example": 150
                    },
                    "dataCadastro": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de cadastro do carro",
                      "example": "2023-07-15T08:30:00Z"
                    },
                    "dataDeExclusao": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "Data de exclusão do carro, se aplicável",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida (ID incorreto)"
          },
          "401": {
            "description": "Não autorizado (falha na autenticação)"
          },
          "404": {
            "description": "Carro não encontrado"
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      },
      "patch": {
        "summary": "Atualiza parcialmente um carro por ID",
        "tags": [
          "Carros"
        ],
        "description": "Endpoint protegido para atualizar parcialmente as informações de um carro específico pelo ID. É necessário um token JWT para acessar essa rota.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID único do carro",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "placa": {
                    "type": "string",
                    "description": "Placa do carro",
                    "example": "XYZ-5678"
                  },
                  "marca": {
                    "type": "string",
                    "description": "Marca do carro",
                    "example": "Toyota"
                  },
                  "modelo": {
                    "type": "string",
                    "description": "Modelo do carro",
                    "example": "Corolla"
                  },
                  "ano": {
                    "type": "integer",
                    "description": "Ano de fabricação do carro",
                    "example": 2018
                  },
                  "km": {
                    "type": "integer",
                    "description": "Quilometragem do carro",
                    "example": 20000
                  },
                  "items": {
                    "type": "object",
                    "description": "Itens adicionais do carro, como ar-condicionado ou direção hidráulica.",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "example": {
                      "ar-condicionado": "sim",
                      "direção hidráulica": "sim"
                    }
                  },
                  "valorDiaria": {
                    "type": "number",
                    "format": "float",
                    "description": "Valor da diária para aluguel do carro",
                    "example": 180
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Carro atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID do carro atualizado",
                      "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                    },
                    "placa": {
                      "type": "string",
                      "description": "Placa do carro",
                      "example": "XYZ-5678"
                    },
                    "marca": {
                      "type": "string",
                      "description": "Marca do carro",
                      "example": "Toyota"
                    },
                    "modelo": {
                      "type": "string",
                      "description": "Modelo do carro",
                      "example": "Corolla"
                    },
                    "ano": {
                      "type": "integer",
                      "description": "Ano de fabricação do carro",
                      "example": 2018
                    },
                    "km": {
                      "type": "integer",
                      "description": "Quilometragem do carro",
                      "example": 20000
                    },
                    "items": {
                      "type": "object",
                      "description": "Itens adicionais do carro",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "example": {
                        "ar-condicionado": "sim",
                        "direção hidráulica": "sim"
                      }
                    },
                    "valorDiaria": {
                      "type": "number",
                      "format": "float",
                      "description": "Valor da diária para aluguel do carro",
                      "example": 180
                    },
                    "dataCadastro": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de cadastro do carro",
                      "example": "2023-07-15T08:30:00Z"
                    },
                    "dataDeExclusao": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "Data de exclusão do carro, se aplicável",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida (dados incorretos ou ausentes)"
          },
          "401": {
            "description": "Não autorizado (falha na autenticação)"
          },
          "404": {
            "description": "Carro não encontrado"
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      },
      "delete": {
        "summary": "Exclui um carro logicamente por ID",
        "tags": [
          "Carros"
        ],
        "description": "Endpoint protegido para excluir logicamente um carro pelo seu ID. A exclusão é realizada definindo a data de exclusão (`dataDeExclusao`) ao invés de remover o registro. É necessário um token JWT para acessar essa rota.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID único do carro a ser excluído",
            "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
          }
        ],
        "responses": {
          "200": {
            "description": "Carro excluído logicamente com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Mensagem de confirmação",
                      "example": "Carro excluído com sucesso"
                    },
                    "dataDeExclusao": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de exclusão lógica do carro",
                      "example": "2023-07-15T08:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida (ID incorreto)"
          },
          "401": {
            "description": "Não autorizado (falha na autenticação)"
          },
          "404": {
            "description": "Carro não encontrado"
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      }
    },
    "/api/v1/clientes/cadastro": {
      "post": {
        "summary": "Cria um novo cliente",
        "tags": [
          "Clientes"
        ],
        "description": "Endpoint protegido para cadastrar um novo cliente no sistema. É necessário um token JWT para acessar essa rota.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "nomeCompleto",
                  "dataDeNascimento",
                  "cpf",
                  "email",
                  "telefone"
                ],
                "properties": {
                  "nomeCompleto": {
                    "type": "string",
                    "example": "Kelly Slater"
                  },
                  "dataDeNascimento": {
                    "type": "string",
                    "format": "date",
                    "example": "1997-11-11"
                  },
                  "cpf": {
                    "type": "string",
                    "example": "321.654.987-22"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "example.test95@yahoo.com"
                  },
                  "telefone": {
                    "type": "string",
                    "example": "11987654321"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cliente criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "e7d66f9d-3c10-4e9e-b939-8a3a19159b6d"
                    },
                    "nomeCompleto": {
                      "type": "string",
                      "example": "Kelly Slater"
                    },
                    "dataDeNascimento": {
                      "type": "string",
                      "format": "date",
                      "example": "1997-11-11"
                    },
                    "cpf": {
                      "type": "string",
                      "example": "321.654.987-22"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "example.test95@yahoo.com"
                    },
                    "telefone": {
                      "type": "string",
                      "example": "11987654321"
                    },
                    "dataCadastro": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-10-12T19:34:42.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida (dados incorretos ou ausentes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Dados inválidos: Data de Nascimento inválida"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Falha na autenticação JWT (Token ausente ou inválido)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token inválido ou ausente"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      }
    },
    "/api/v1/clientes/visualizar/{id}": {
      "get": {
        "summary": "Visualizar um cliente pelo ID",
        "tags": [
          "Clientes"
        ],
        "description": "Endpoint para visualizar as informações detalhadas de um cliente específico, utilizando seu ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "O ID do cliente a ser visualizado"
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente retornado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "e7d66f9d-3c10-4e9e-b939-8a3a19159b6d"
                    },
                    "nomeCompleto": {
                      "type": "string",
                      "example": "alan Lima pereira"
                    },
                    "dataDeNascimento": {
                      "type": "string",
                      "format": "date",
                      "example": "1997-11-11"
                    },
                    "cpf": {
                      "type": "string",
                      "example": "321.654.987-22"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "marian111.lima95@yahoo.com"
                    },
                    "telefone": {
                      "type": "string",
                      "example": "11987654321"
                    },
                    "dataCadastro": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-10-13T17:39:38.000Z"
                    },
                    "dataExclusao": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Falha na autenticação JWT (Token inválido ou ausente)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token inválido ou ausente"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Cliente não encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      }
    },
    "/api/v1/clientes/list": {
      "get": {
        "summary": "Lista todos os clientes cadastrados (incluindo excluídos ou não)",
        "tags": [
          "Clientes"
        ],
        "description": "Endpoint para listar todos os clientes cadastrados, com a possibilidade de filtrar por nome, email, CPF, telefone e status de exclusão (excluídos ou não). Esta rota é protegida por autenticação via token JWT.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "nomeCompleto",
            "schema": {
              "type": "string"
            },
            "description": "Parte do nome do cliente"
          },
          {
            "in": "query",
            "name": "cpf",
            "schema": {
              "type": "string"
            },
            "description": "CPF completo e válido do cliente"
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "Parte do email do cliente"
          },
          {
            "in": "query",
            "name": "telefone",
            "schema": {
              "type": "string"
            },
            "description": "Parte do telefone do cliente"
          },
          {
            "in": "query",
            "name": "excluido",
            "schema": {
              "type": "string",
              "enum": [
                "sim",
                "não"
              ]
            },
            "description": "Filtrar clientes excluídos (sim) ou não excluídos (não). Valor padrão: \"não\".\n"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 5,
              "maximum": 10
            },
            "description": "Quantidade máxima de clientes por página. (default: 5, min: 5, max: 10)\n"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Página atual da paginação. Valor padrão: 1.\n"
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "nomeCompleto",
                "dataCadastro",
                "dataExclusao"
              ]
            },
            "description": "Campo pelo qual a listagem deve ser ordenada. Exemplos: nomeCompleto, dataCadastro, dataExclusao.\n"
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Direção da ordenação (ascendente ou descendente)"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de clientes retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalFound": {
                      "type": "integer",
                      "example": 20
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 4
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": 1
                    },
                    "clients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "e7d66f9d-3c10-4e9e-b939-8a3a19159b6d"
                          },
                          "nomeCompleto": {
                            "type": "string",
                            "example": "alan Lima pereira"
                          },
                          "dataDeNascimento": {
                            "type": "string",
                            "format": "date",
                            "example": "1997-11-11"
                          },
                          "cpf": {
                            "type": "string",
                            "example": "321.654.987-22"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "marian111.lima95@yahoo.com"
                          },
                          "telefone": {
                            "type": "string",
                            "example": "11987654321"
                          },
                          "dataCadastro": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-10-13T17:39:38.000Z"
                          },
                          "dataExclusao": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "example": "2024-12-15T12:30:00.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida. Verifique os parâmetros de entrada."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Falha na autenticação JWT (Token inválido ou ausente)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token inválido ou ausente"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      }
    },
    "/api/v1/clientes/atualizar/{id}": {
      "patch": {
        "summary": "Atualiza um cliente existente",
        "tags": [
          "Clientes"
        ],
        "description": "Atualiza os dados de um cliente específico. Apenas os campos enviados serão atualizados.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID do cliente a ser atualizado.",
            "schema": {
              "type": "string",
              "example": "8468959e-9c86-4c47-bf44-c93f8c5e0a75"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nomeCompleto": {
                    "type": "string",
                    "example": "Kelly Slater"
                  },
                  "dataDeNascimento": {
                    "type": "string",
                    "format": "date",
                    "example": "1997-11-11"
                  },
                  "cpf": {
                    "type": "string",
                    "example": "321.654.987-22"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "WSL.ASP95@yahoo.com"
                  },
                  "telefone": {
                    "type": "string",
                    "example": "1121964498732"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID do cliente atualizado",
                      "example": "e7d66f9d-3c10-4e9e-b939-8a3a19159b6d"
                    },
                    "nomeCompleto": {
                      "type": "string",
                      "example": "Joel Parkingson"
                    },
                    "dataDeNascimento": {
                      "type": "string",
                      "format": "date",
                      "example": "1997-11-11"
                    },
                    "cpf": {
                      "type": "string",
                      "example": "321.654.987-22"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "marian111.lima95@yahoo.com"
                    },
                    "telefone": {
                      "type": "string",
                      "example": "1121964498732"
                    },
                    "dataCadastro": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-10-12T19:34:42.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida (dados incorretos, duplicados ou ausentes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "CPF ou email já cadastrados, ou dados inválidos fornecidos"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Cliente não encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      }
    },
    "/api/v1/clientes/excluir/{id}": {
      "delete": {
        "summary": "Excluir cliente (soft delete)",
        "tags": [
          "Clientes"
        ],
        "description": "Marca um cliente como excluído definindo a data de exclusão, sem remover o registro do banco de dados. A rota é protegida por autenticação via JWT.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "O ID do cliente a ser excluído"
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente excluído com sucesso (soft delete)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Cliente excluído com sucesso"
                    },
                    "dataDeExclusao": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de exclusão lógica do carro",
                      "example": "2023-07-15T08:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cliente já está excluído",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Cliente já está excluído"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cliente não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Cliente não encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      }
    },
    "/api/v1/pedidos": {
      "post": {
        "summary": "Realiza a criação de pedidos no sistema.",
        "tags": [
          "Pedidos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clienteId": {
                    "type": "number",
                    "description": "O Id do Usuário.",
                    "example": 1
                  },
                  "carroId": {
                    "type": "number",
                    "description": "O Id do Carro.",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retorna um JSON do Pedido criado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID do pedido criado.",
                      "example": "649350eb-2e93-44d2-b0cf-b1713a8..."
                    },
                    "dataPedido": {
                      "type": "date",
                      "description": "Data de criação do pedido.",
                      "example": "2024-10-15T12:06:45.857Z"
                    },
                    "statusPedido": {
                      "type": "enum",
                      "description": "Status atual do pedido.",
                      "example": "Aberto"
                    },
                    "cep": {
                      "type": "string or null",
                      "description": "CEP do endereço do cliente.",
                      "example": "null"
                    },
                    "cidade": {
                      "type": "string or null",
                      "description": "Cidade encontrada na busca pelo ViaCep.",
                      "example": "null"
                    },
                    "uf": {
                      "type": "string or null",
                      "description": "UF encontrada na busca pelo ViaCep.",
                      "example": "null"
                    },
                    "taxaLocacao": {
                      "type": "number",
                      "description": "Valor da Taxa de locação por UF.",
                      "example": 0
                    },
                    "valorTotal": {
                      "type": "number",
                      "description": "Valor Total da Locação + Diárias.",
                      "example": 0
                    },
                    "dataHoraInicial": {
                      "type": "date or null",
                      "description": "Data e Hora inicial da Locação.",
                      "example": null
                    },
                    "dataHoraFinal": {
                      "type": "date or null",
                      "description": "Data e Hora final da Locação.",
                      "example": null
                    },
                    "dataCancelamento": {
                      "type": "date or null",
                      "description": "Data do cancelamento do pedido.",
                      "example": null
                    },
                    "dataFechamento": {
                      "type": "date or null",
                      "description": "Data do fechamento do pedido.",
                      "example": null
                    },
                    "valorMulta": {
                      "type": "number or null",
                      "description": "Valor de multa gerado por atraso.",
                      "example": null
                    },
                    "clienteId": {
                      "type": "number",
                      "description": "Id do cliente associado ao Pedido.",
                      "example": 10
                    },
                    "carroId": {
                      "type": "number",
                      "description": "Id do carro associado ao Pedido.",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Carro ou Cliente não encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Mensagem de erro",
                      "example": "Cliente não encontrado"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retorna uma lista de pedidos paginados.",
        "tags": [
          "Pedidos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "description": "Página selecionado dos Pedidos.",
                    "example": 1
                  },
                  "pageSize": {
                    "type": "number",
                    "description": "Quantidade de pedidos que aparecem por página.",
                    "example": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna uma lista de pedidos com paginação.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Número total de pedidos.",
                      "example": 8
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Número total de páginas.",
                      "example": 2
                    },
                    "pedidos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID do pedido.",
                            "example": "5e07e29e-a3d8-440b-8991-7703773b6199"
                          },
                          "statusPedido": {
                            "type": "string",
                            "description": "Status do pedido.",
                            "example": "Cancelado"
                          },
                          "dataPedido": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Data de criação do pedido.",
                            "example": "2024-10-13T02:26:49.000Z"
                          },
                          "dataHoraInicial": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Data e hora inicial da locação.",
                            "example": "2024-10-14T18:00:00.000Z"
                          },
                          "dataHoraFinal": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Data e hora final da locação.",
                            "example": "2024-10-15T03:00:00.000Z"
                          },
                          "taxaLocacao": {
                            "type": "number",
                            "description": "Taxa de locação aplicada.",
                            "example": 170
                          },
                          "valorTotal": {
                            "type": "number",
                            "description": "Valor total da locação.",
                            "example": 0
                          },
                          "cep": {
                            "type": "string",
                            "description": "CEP do endereço do cliente.",
                            "example": "13486-470"
                          },
                          "cidade": {
                            "type": "string",
                            "description": "Cidade do cliente.",
                            "example": "Limeira"
                          },
                          "uf": {
                            "type": "string",
                            "description": "Estado do cliente.",
                            "example": "SP"
                          },
                          "cliente": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID do cliente.",
                                "example": "6"
                              },
                              "nome": {
                                "type": "string",
                                "description": "Nome do cliente.",
                                "example": "Pedro Fernandes"
                              },
                              "cpf": {
                                "type": "string",
                                "description": "CPF do cliente.",
                                "example": "666.777.888-99"
                              }
                            }
                          },
                          "exemplosPedidos": {
                            "type": "array",
                            "description": "Exemplo de mais pedidos.",
                            "example": [
                              {
                                "id": "60f02aab-1539-445e-949b-d2c73d180f47",
                                "statusPedido": "Fechado",
                                "dataPedido": "2024-10-14T02:26:41.000Z",
                                "dataHoraInicial": "2024-10-14T23:00:00.000Z",
                                "dataHoraFinal": "2024-10-13T03:00:00.000Z",
                                "taxaLocacao": 170,
                                "valorTotal": 1570,
                                "cep": "13482-792",
                                "cidade": "Limeira",
                                "uf": "SP",
                                "cliente": {
                                  "id": "1",
                                  "nome": "Ana Oliveira",
                                  "cpf": "111.222.333-44"
                                }
                              },
                              {
                                "id": "649350eb-2e93-44d2-b0cf-b1713a86a081",
                                "statusPedido": "Aberto",
                                "dataPedido": "2024-10-15T12:06:45.000Z",
                                "dataHoraInicial": null,
                                "dataHoraFinal": null,
                                "taxaLocacao": 0,
                                "valorTotal": 0,
                                "cep": null,
                                "cidade": null,
                                "uf": null,
                                "cliente": {
                                  "id": "10",
                                  "nome": "Gustavo Lima",
                                  "cpf": "000.111.222-33"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Mensagem de erro detalhada.",
                      "example": "Requisição inválida."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum pedido encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Mensagem de erro detalhada.",
                      "example": "Nenhum pedido encontrado."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza os detalhes de um pedido específico.",
        "tags": [
          "Pedidos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "UUID",
                    "description": "ID do Pedido.",
                    "example": "71ad2628-b67a-4e90-beac-8a76b2e8..."
                  },
                  "cep": {
                    "type": "string",
                    "description": "Novo CEP do pedido.",
                    "example": "47270000"
                  },
                  "dataHoraInicial": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Nova data e hora de início da locação.",
                    "example": "2024-10-15T12:26:46"
                  },
                  "dataHoraFinal": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Nova data e hora de término da locação.",
                    "example": "2024-10-20T02:26:49"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Pedido atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID do pedido atualizado.",
                      "example": "71ad2628-b67a-4e90-beac-8a76b2e85307"
                    },
                    "clienteId": {
                      "type": "string",
                      "description": "ID do cliente associado ao pedido.",
                      "example": "8"
                    },
                    "carroId": {
                      "type": "string",
                      "description": "ID do carro associado ao pedido.",
                      "example": "2"
                    },
                    "dataPedido": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de criação do pedido.",
                      "example": "2024-10-14T22:48:09.000Z"
                    },
                    "statusPedido": {
                      "type": "string",
                      "description": "Status atual do pedido.",
                      "example": "Aprovado"
                    },
                    "cep": {
                      "type": "string",
                      "description": "CEP atualizado do cliente.",
                      "example": "47270000"
                    },
                    "cidade": {
                      "type": "string",
                      "description": "Cidade atualizada do cliente.",
                      "example": "Pilão Arcado"
                    },
                    "uf": {
                      "type": "string",
                      "description": "Estado atualizado do cliente.",
                      "example": "BA"
                    },
                    "taxaLocacao": {
                      "type": "number",
                      "description": "Taxa de locação aplicada.",
                      "example": 50
                    },
                    "valorTotal": {
                      "type": "number",
                      "description": "Valor total da locação.",
                      "example": 800
                    },
                    "dataHoraInicial": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data e hora inicial da locação atualizada.",
                      "example": "2024-10-15T12:26:46"
                    },
                    "dataHoraFinal": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data e hora final da locação atualizada.",
                      "example": "2024-10-20T02:26:49"
                    },
                    "dataCancelamento": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de cancelamento do pedido (se aplicável).",
                      "example": null
                    },
                    "dataFechamento": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de fechamento do pedido (se aplicável).",
                      "example": null
                    },
                    "valorMulta": {
                      "type": "number",
                      "description": "Valor da multa aplicada (se aplicável).",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Detalhes do erro.",
                      "example": "Requisição inválida."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Mensagem de erro.",
                      "example": "Pedido não encontrado."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pedidos/{id}": {
      "get": {
        "summary": "Retorna os detalhes de um pedido específico.",
        "tags": [
          "Pedidos"
        ],
        "description": "Endpoint protegido para retornar os detalhes de um pedido específico pelo ID. É necessário um token JWT para acessar essa rota.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID único do pedido.",
            "example": "5e07e29e-a3d8-440b-8991-7703773b6..."
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do Pedido retornado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID do pedido.",
                      "example": "5e07e29e-a3d8-440b-8991-7703773b6199"
                    },
                    "statusPedido": {
                      "type": "string",
                      "description": "Status atual do pedido.",
                      "example": "Cancelado"
                    },
                    "dataPedido": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de criação do pedido.",
                      "example": "2024-10-13T02:26:49.000Z"
                    },
                    "dataHoraInicial": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data e hora de início da locação.",
                      "example": "2024-10-14T18:00:00.000Z"
                    },
                    "dataHoraFinal": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data e hora de término da locação.",
                      "example": "2024-10-15T03:00:00.000Z"
                    },
                    "taxaLocacao": {
                      "type": "number",
                      "description": "Valor da taxa de locação.",
                      "example": 170
                    },
                    "valorTotal": {
                      "type": "number",
                      "description": "Valor total da locação.",
                      "example": 0
                    },
                    "cep": {
                      "type": "string",
                      "description": "CEP do cliente.",
                      "example": "13486-470"
                    },
                    "cidade": {
                      "type": "string",
                      "description": "Cidade do cliente.",
                      "example": "Limeira"
                    },
                    "uf": {
                      "type": "string",
                      "description": "Estado (UF) do cliente.",
                      "example": "SP"
                    },
                    "cliente": {
                      "type": "object",
                      "description": "Informações do cliente.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID do cliente.",
                          "example": "6"
                        },
                        "nome": {
                          "type": "string",
                          "description": "Nome do cliente.",
                          "example": "Pedro Fernandes"
                        },
                        "dataNascimento": {
                          "type": "string",
                          "format": "date",
                          "description": "Data de nascimento do cliente.",
                          "example": "1993-12-10T00:00:00.000Z"
                        },
                        "cpf": {
                          "type": "string",
                          "description": "CPF do cliente.",
                          "example": "666.777.888-99"
                        },
                        "email": {
                          "type": "string",
                          "description": "E-mail do cliente.",
                          "example": "pedro.fernandes@email.com"
                        },
                        "telefone": {
                          "type": "string",
                          "description": "Telefone do cliente.",
                          "example": "(81) 99876-5432"
                        },
                        "dataCadastro": {
                          "type": "string",
                          "format": "date",
                          "description": "Data de cadastro do cliente.",
                          "example": "2024-10-11"
                        },
                        "dataExclusao": {
                          "type": "string",
                          "format": "date",
                          "nullable": true,
                          "description": "Data de exclusão do cliente, se aplicável.",
                          "example": null
                        }
                      }
                    },
                    "carro": {
                      "type": "object",
                      "description": "Informações do carro.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID do carro.",
                          "example": "2"
                        },
                        "marca": {
                          "type": "string",
                          "description": "Marca do carro.",
                          "example": "Toyota"
                        },
                        "modelo": {
                          "type": "string",
                          "description": "Modelo do carro.",
                          "example": "Corolla"
                        },
                        "ano": {
                          "type": "number",
                          "description": "Ano de fabricação do carro.",
                          "example": 2015
                        },
                        "km": {
                          "type": "number",
                          "description": "Quilometragem do carro.",
                          "example": 60500
                        },
                        "items": {
                          "type": "array",
                          "description": "Itens disponíveis no carro.",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Ar-Condicionado",
                            "Air-bags",
                            "Freios ABS"
                          ]
                        },
                        "placa": {
                          "type": "string",
                          "description": "Placa do carro.",
                          "example": "DEF-5678"
                        },
                        "valorDiaria": {
                          "type": "number",
                          "description": "Valor da diária do carro.",
                          "example": 150
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Mensagem de erro.",
                      "example": "Pedido não encontrado."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancela um pedido específico.",
        "tags": [
          "Pedidos"
        ],
        "description": "Endpoint protegido para cancelar um pedido específico pelo ID. É necessário um token JWT para acessar essa rota.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID do pedido a ser cancelado.",
            "example": "649350eb-2e93-44d2-b0cf-b1713a86a081"
          }
        ],
        "responses": {
          "204": {
            "description": "Pedido cancelado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Mensagem de sucesso.",
                      "example": "Pedido cancelado com sucesso."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Detalhes do erro.",
                      "example": "Requisição inválida."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Mensagem de erro.",
                      "example": "Pedido não encontrado."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "summary": "Cadastra um novo usuário.",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "description": "O nome completo do usuário.",
                    "example": "Fulano de Tal"
                  },
                  "email": {
                    "type": "string",
                    "description": "O e-mail do usuário.",
                    "example": "fulano@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "A senha do usuário.",
                    "example": "senhaSegura123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "O ID do usuário criado.",
                      "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "fullName": {
                      "type": "string",
                      "description": "O nome completo do usuário.",
                      "example": "Fulano de Tal"
                    },
                    "email": {
                      "type": "string",
                      "description": "O e-mail do usuário.",
                      "example": "fulano@example.com"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Data de criação do usuário.",
                      "example": "2024-10-11T10:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro na validação dos dados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Campo 'email' é obrigatório."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Lista todos os usuários com opções de filtro e paginação",
        "tags": [
          "User"
        ],
        "description": "Endpoint protegido para listar todos os usuários com possibilidade de aplicar filtros e ordenação. É necessário um token JWT para acessar essa rota.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fullName",
            "schema": {
              "type": "string"
            },
            "description": "Nome completo do usuário para busca por padrão \"like\""
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "Email do usuário para busca por padrão \"like\""
          },
          {
            "in": "query",
            "name": "createdAt",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Data de criação para filtro (no formato AAAA-MM-DD)"
          },
          {
            "in": "query",
            "name": "deletedAt",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Data de exclusão para filtro (no formato AAAA-MM-DD)"
          },
          {
            "in": "query",
            "name": "excluded",
            "schema": {
              "type": "string",
              "enum": [
                "sim",
                "não"
              ]
            },
            "description": "Filtro para usuários excluídos (\"sim\" para excluídos, \"não\" para ativos)"
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "default": "createdAt"
            },
            "description": "Campo para ordenar a lista de usuários"
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "ASC"
            },
            "description": "Direção de ordenação (ascendente ou descendente)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 5
            },
            "description": "Número de resultados por página (máximo de 10)"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Número da página para paginação"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderedBy": {
                      "type": "string",
                      "description": "Campo pelo qual a lista está ordenada",
                      "example": "createdAt"
                    },
                    "isExcluded": {
                      "type": "string",
                      "description": "Indicação se está filtrando por excluídos",
                      "example": "não"
                    },
                    "orderDirection": {
                      "type": "string",
                      "description": "Direção da ordenação",
                      "example": "Ascendente"
                    },
                    "totalUsersFound": {
                      "type": "integer",
                      "description": "Total de usuários encontrados",
                      "example": 25
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Número total de páginas disponíveis",
                      "example": 5
                    },
                    "currentPage": {
                      "type": "integer",
                      "description": "Página atual da listagem",
                      "example": 1
                    },
                    "Users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "ID do usuário",
                            "example": "b47ac10b-58cc-4372-a567-0e02b2c3d479"
                          },
                          "fullName": {
                            "type": "string",
                            "description": "Nome completo do usuário",
                            "example": "João Silva"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "Email do usuário",
                            "example": "joao.silva@example.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida (parâmetros incorretos ou faltando)"
          },
          "401": {
            "description": "Não autorizado (falha na autenticação)"
          },
          "404": {
            "description": "Nenhum usuário encontrado"
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Busca um usuário pelo ID.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID do usuário."
          }
        ],
        "responses": {
          "200": {
            "description": "Dados do usuário encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "Fulano de Tal"
                    },
                    "email": {
                      "type": "string",
                      "example": "fulano@example.com"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2024-10-11T10:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuário não encontrado."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza parcialmente um usuário por ID",
        "tags": [
          "User"
        ],
        "description": "Endpoint protegido para atualizar parcialmente as informações de um usuário específico pelo ID. É necessário um token JWT para acessar essa rota.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID único do usuário",
            "example": "b47ac10b-58cc-4372-a567-0e02b2c3d479"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "description": "Nome completo do usuário",
                    "example": "João Silva"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email do usuário",
                    "example": "joao.silva@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Senha do usuário (mínimo de 6 caracteres e pelo menos uma letra maiúscula)",
                    "example": "SenhaForte123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "ID do usuário",
                      "example": "b47ac10b-58cc-4372-a567-0e02b2c3d479"
                    },
                    "fullName": {
                      "type": "string",
                      "description": "Nome completo do usuário atualizado",
                      "example": "João Silva"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "Email atualizado do usuário",
                      "example": "joao.silva@example.com"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de criação do usuário",
                      "example": "2023-01-01T12:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data da última atualização do usuário",
                      "example": "2023-07-15T08:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida (dados incorretos ou ausentes)"
          },
          "401": {
            "description": "Não autorizado (falha na autenticação)"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "409": {
            "description": "Conflito (usuário já excluído ou email duplicado)"
          },
          "500": {
            "description": "Erro interno no servidor"
          }
        }
      },
      "delete": {
        "summary": "Marca o usuário como excluído (soft delete).",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID do usuário."
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário excluído com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuário excluído com sucesso."
                    },
                    "dataDeExclusao": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Data de exclusão lógica do carro",
                      "example": "2023-07-15T08:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuário não encontrado."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}
